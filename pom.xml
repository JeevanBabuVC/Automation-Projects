<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.coffeecart</groupId>
    <artifactId>CoffeeCart-Automation</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>24</maven.compiler.source>
        <maven.compiler.target>24</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <selenium.version>4.18.1</selenium.version>
        <testng.version>7.10.2</testng.version>
        <webdrivermanager.version>5.7.0</webdrivermanager.version>
        <apache.poi.version>5.2.5</apache.poi.version>
        <slf4j.version>2.0.12</slf4j.version>
        <logback.version>1.5.3</logback.version>
        <commons-io.version>2.11.0</commons-io.version>
    </properties>

    <dependencies>
        <!-- Core browser automation library that provides WebDriver API for controlling browsers -->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
        </dependency>

        <!-- Testing framework that organizes and runs our test methods with annotations and assertions -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
        </dependency>

        <!-- Automatically downloads and manages browser drivers like ChromeDriver and GeckoDriver -->
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>${webdrivermanager.version}</version>
        </dependency>

        <!-- Library for reading Excel and CSV files to manage test data externally -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${apache.poi.version}</version>
        </dependency>
        <!-- Extension of Apache POI that handles modern Excel formats like .xlsx files -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${apache.poi.version}</version>
        </dependency>

        <!-- Logging interface that allows us to write consistent log messages throughout the application -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- Actual logging implementation that writes log messages to files and console -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- Utility library for common file operations like copying and reading files -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <!-- Integration library that generates beautiful HTML test reports with screenshots and detailed results -->
        <dependency>
            <groupId>io.qameta.allure</groupId>
            <artifactId>allure-testng</artifactId>
            <version>2.24.0</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- Compiles Java source code and ensures we use the correct Java version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.12.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            
            <!-- Runs our TestNG tests and generates reports with custom configurations -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M9</version>
                <configuration>
                    <!-- Tells Maven to use our TestNG XML file for test configuration -->
                    <suiteXmlFiles>
                        <suiteXmlFile>testng-optimized.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <properties>
                        <!-- Limits TestNG to use only 1 thread for stable test execution -->
                        <property>
                            <name>suitethreadpoolsize</name>
                            <value>1</value>
                        </property>
                    </properties>
                    <!-- Where to save test reports -->
                    <reportsDirectory>test-output</reportsDirectory>
                    <!-- Continue building even if some tests fail (useful for intentional failures) -->
                    <testFailureIgnore>true</testFailureIgnore>
                    <!-- Don't skip remaining tests after failures -->
                    <skipAfterFailureCount>0</skipAfterFailureCount>
                    <!-- Disable retries completely -->
                    <rerunFailingTestsCount>0</rerunFailingTestsCount>
                    <!-- Run tests only once -->
                    <runOrder>filesystem</runOrder>
                    <!-- Tell Allure where to save test results and disable retries -->
                    <systemPropertyVariables>
                        <testng.retry.count>0</testng.retry.count>
                        <testng.retry.analyzer.disable>true</testng.retry.analyzer.disable>
                        <allure.results.directory>target/allure-results</allure.results.directory>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            
            <!-- Generates beautiful HTML reports from test results -->
            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>2.12.0</version>
            </plugin>
            
            <!-- Handles copying resource files and prevents corruption of Excel files during build -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <!-- Don't process Excel files as text to avoid corruption -->
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
                        <nonFilteredFileExtension>xls</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.xlsx</include>
                    <include>**/*.xls</include>
                </includes>
            </resource>
        </resources>
    </build>

    <profiles>
        <!-- Profile to run only Chrome tests -->
        <profile>
            <id>chrome-only</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>testng-chrome-only.xml</suiteXmlFile>
                            </suiteXmlFiles>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile to run only Firefox tests -->
        <profile>
            <id>firefox-only</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>testng-firefox-only.xml</suiteXmlFile>
                            </suiteXmlFiles>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profile to run both browsers (Chrome first, then Firefox) -->
        <profile>
            <id>both-browsers</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <suiteXmlFiles>
                                <suiteXmlFile>testng-optimized.xml</suiteXmlFile>
                            </suiteXmlFiles>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
